#!/bin/bash
# THE BEER-WARE LICENSE:
# <joseph.copenhaver@gmail.com> wrote this file. As long as you retain this notice you
# can do whatever you want with this stuff. If we meet some day, and you think
# this stuff is worth it, you can buy me a beer in return.
# Joseph Copenhaver
set -eo pipefail
# Color codes
red='\033[0;31m'
yellow='\033[0;33m'
blue='\033[0;34m'
green='\033[0;32m'
NC='\033[0m' # No colors
if ! [[ $(cat $1) =~ ^((:[^:]+:)?(chore|docs|feat|fix|perf|refact|refactor|style|test|build|ci)(\([a-zA-Z0-9]+\))?:|Merge\ pull) ]]; then
  printf "${red}Please use semantic commit messages:\n"
  printf "${yellow}feat${NC}[${green}(scope)${NC}]: ${blue}add hat wobble\n"
  printf "${yellow}^--^${green} ^--*--^ ${blue}  ^------------^ -> Summary in present tense.\n"
  printf "${yellow} *      ${green}*-> [optional]: Scope of the commit.\n"
  printf "${yellow} *-> Type: chore, docs, feat, fix, perf, refact(or), style, test, build, or ci.\n${NC}"
  exit 1
fi
edited_file="${1}.edited"
cp -a "${1}" "${edited_file}"
sed -i.bak -E \
\
'1 s/^chore:/:wrench:chore:/ ; '\
'1 s/^docs:/:pencil:docs:/ ; '\
'1 s/^feat:/:sparkles:feat:/ ; '\
'1 s/^fix:/:bug:fix:/ ; '\
'1 s/^perf:/:zap:perf:/ ; '\
'1 s/^refact:/:recycle:refact:/ ; '\
'1 s/^refactor:/:recycle:refactor:/ ; '\
'1 s/^style:/:art:style:/ ; '\
'1 s/^test:/:microscope:test:/ ; '\
'1 s/^build:/:construction_worker:build:/ ; '\
'1 s/^ci:/:construction_worker:ci:/ ; '\
\
 "${edited_file}"
rm -f "${edited_file}.bak"
mv "${edited_file}" "${1}"
exit 0
